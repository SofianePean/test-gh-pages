{"version":3,"sources":["components/Header/IconeTwitch.svg","components/Header/Search.svg","components/Header/MenuIco.svg","components/Header/Croix.svg","components/Header/index.js","components/Header/Sidebar/ItemSidebar.js","api.js","components/Header/Sidebar/index.js","components/Games/game.js","components/Games/index.js","components/TopStreams/ItemTopStreams.js","components/TopStreams/index.js","components/GamesStreams/GameStreams.js","components/GamesStreams/index.js","components/Resultats/index.js","components/Live/index.js","components/App/index.js","index.js"],"names":["Header","useState","menu","showMenu","smallScreen","setSmallScrenn","inputSearch","setSearch","handleMediaQueryChange","mediaQuery","matches","useEffect","window","matchMedia","addListener","removeListener","hideMenu","className","onClick","to","src","logo","alt","onSubmit","event","preventDefault","required","value","onChange","target","handleKeyPress","type","placeholder","pathname","search","croix","menuIco","ItemSidebar","truePic","user_name","viewer_count","gameName","api","axios","create","headers","Authorization","Sidebar","topStreams","setTopStreams","a","get","result","dataArray","data","gameIds","map","stream","game_id","userIds","user_id","queryParamsGame","queryParamsUsers","id","urlFinalGames","urlFinalUsers","gameNames","getUsers","gameNamesArray","UsersArray","finalArray","login","forEach","name","user","profile_image_url","slice","fetchData","Game","box","state","gameID","Games","games","setGames","game","newUrl","box_art_url","replace","ItemTopStreams","thumbnail_url","TopStream","channels","setChannels","channel","GameStreams","GamesStreams","streamData","setStreamData","viewers","setViewers","location","useLocation","slug","useParams","newURL","totalViewers","reduce","acc","val","userIDs","finalUrl","getUsersLogin","userLoginArray","console","log","index","Resultats","setResult","streamerInfo","setStreamerInfo","cleanSearch","length","display_name","description","Live","infoStream","setInfoStream","infoGame","setInfoGame","resultNameGame","nameGame","height","width","title","language","App","exact","path","component","TopStreams","rootReactElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.05334f6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IconeTwitch.72d35b74.svg\";","export default __webpack_public_path__ + \"static/media/Search.240e946d.svg\";","export default __webpack_public_path__ + \"static/media/MenuIco.e783931c.svg\";","export default __webpack_public_path__ + \"static/media/Croix.2b9b9747.svg\";","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from './IconeTwitch.svg';\nimport search from './Search.svg';\nimport menuIco from './MenuIco.svg';\nimport croix from './Croix.svg';\nimport './header.scss';\n\nfunction Header() {\n  const [menu, showMenu] = useState(false);\n  const [smallScreen, setSmallScrenn] = useState(false);\n  const [inputSearch, setSearch] = useState('');\n\n  const handleMediaQueryChange = (mediaQuery) => {\n    if (mediaQuery.matches) {\n      setSmallScrenn(true);\n    }\n    else {\n      setSmallScrenn(false);\n    }\n  };\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(max-width: 900px)');\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  });\n\n  const toggleNavRes = () => {\n    showMenu(!menu);\n  };\n\n  const hideMenu = () => {\n    if (menu === true) {\n      showMenu(!menu);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const handleKeyPress = (event) => {\n    setSearch(event.target.value);\n  };\n  return (\n    <div>\n      <nav className=\"header-top\">\n        {(menu || !smallScreen) && (\n\n        <ul className=\"list-menu\">\n          <li onClick={hideMenu} className=\"link-nav\">\n            <Link className=\"link\" to=\"/\">\n              <img src={logo} alt=\"logo twitch\" className=\"logo\" />\n            </Link>\n          </li>\n          <li onClick={hideMenu} className=\"link-nav\">\n            <Link className=\"link\" to=\"/\">\n              Top Games\n            </Link>\n          </li>\n          <li onClick={hideMenu} className=\"link-nav\">\n            <Link className=\"link\" to=\"/top-streams\">\n              Top Streams\n            </Link>\n          </li>\n          <li className=\"link-nav\" onSubmit={handleSubmit}>\n            <form className=\"form\">\n              <input required value={inputSearch} onChange={((event) => handleKeyPress(event))} type=\"text\" className=\"input-search\" placeholder=\"Rechercher\" />\n              <Link\n                className=\"link\"\n                to={{\n                  pathname: `/resultats/${inputSearch}`,\n                }}\n              >\n                <button type=\"submit\">\n                  <img src={search} alt=\"icone loupe\" className=\"logo-loupe\" />\n                </button>\n              </Link>\n            </form>\n          </li>\n        </ul>\n        )}\n      </nav>\n      <div className=\"menuResBtn\">\n        <img onClick={toggleNavRes} src={!menu ? menuIco : croix} alt=\"icone menu responsive\" className=\"menuResBtn-menu-icon\" />\n      </div>\n    </div>\n\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction ItemSidebar({ truePic, user_name, viewer_count, gameName }) {\n  return (\n    <li className=\"item-sidebar\">\n      <img src={truePic} alt=\"logo user\" className=\"item-sidebar-img\" />\n      <div className=\"item-sidebar-user\">{user_name}</div>\n      <div className=\"item-sidebar-viewer\">\n        <div className=\"item-sidebar-redpoint\" />\n        <div>{viewer_count}</div>\n      </div>\n      <div className=\"item-sidebar-game\">{gameName}</div>\n    </li>\n  );\n}\n\nexport default ItemSidebar;\n","import axios from 'axios';\n\nconst api = axios.create({\n  headers: {\n    // 'Client-ID': process.env.CONFIG_CLIENT,\n    'Client-ID': 'plfqmjmvoci2xb9gzv3fjdf7ns8jgs',\n    // Authorization: process.env.CONFIG_AUTH,\n    Authorization: 'Bearer e91sv2wz3vyopq95y6nfkpobyyud2j',\n  },\n});\n\n// https://id.twitch.tv/oauth2/authorize?client_id=plfqmjmvoci2xb9gzv3fjdf7ns8jgs&redirect_uri=http://127.0.0.1/&response_type=token\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport ItemSidebar from './ItemSidebar';\nimport api from '../../../api';\nimport './sidebar.scss';\n\nfunction Sidebar() {\n  const [topStreams, setTopStreams] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Appel à l'API pour récupérer les top stream\n      const result = await api.get('https://api.twitch.tv/helix/streams');\n      const dataArray = result.data.data;\n      // Je viens map le tableau pour récupérer les id dont j'aurai besoin pour la suite\n      const gameIds = dataArray.map((stream) => stream.game_id);\n      const userIds = dataArray.map((stream) => stream.user_id);\n      // console.log(gameIds);\n      // console.log(userIds);\n      // Création des url personnalisés\n      const baseUrlGames = 'https://api.twitch.tv/helix/games?';\n      const baseUrlUSers = 'https://api.twitch.tv/helix/users?';\n\n      let queryParamsGame = '';\n      let queryParamsUsers = '';\n      // Je viens concaténer pour remplir mon url\n      gameIds.map((id) => (queryParamsGame += `id=${id}&`));\n\n      userIds.map((id) => (queryParamsUsers += `id=${id}&`));\n      // Je viens additionner mes 2 bout d'url\n      const urlFinalGames = baseUrlGames + queryParamsGame;\n      const urlFinalUsers = baseUrlUSers + queryParamsUsers;\n\n      // console.log(urlFinalGames);\n      // console.log(urlFinalUsers);\n\n      const gameNames = await api.get(urlFinalGames);\n      const getUsers = await api.get(urlFinalUsers);\n\n      const gameNamesArray = gameNames.data.data;\n      const UsersArray = getUsers.data.data;\n      // console.log(getNamesArray);\n      // console.log(getUsersArray);\n      // Création du tableua final\n      const finalArray = dataArray.map((stream) => {\n        stream.gameName = '';\n        stream.truePic = '';\n        stream.login = '';\n\n        gameNamesArray.forEach((name) => {\n          UsersArray.forEach((user) => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.truePic = user.profile_image_url;\n              stream.gameName = name.name;\n              stream.login = user.login;\n            }\n          });\n        });\n        return stream;\n      });\n      setTopStreams(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"sidebar-title\">Chaîne recommandées</h2>\n      <ul className=\"list-stream\" />\n      {topStreams.map((stream) => (\n        <ItemSidebar key={stream.id} {...stream} />\n      ))}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Game({ name, box, id }) {\n  return (\n    <div className=\"card\">\n      <img src={box} alt=\"jeu profil pic\" className=\"card-img\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{name}</h5>\n        <Link to={{\n          pathname: `game/${name}`,\n          state: {\n            gameID: id,\n          },\n        }}\n        >\n          <div className=\"card-btn\">Regarder {name}</div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nGame.propTypes = {\n  id: PropTypes.number.isRequired,\n  box: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport api from '../../api';\nimport Game from './game';\nimport './games.scss';\n\nfunction Games() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get('https://api.twitch.tv/helix/games/top');\n      // console.log(result.data.data);\n      // Je stock le résultat de mon fetch dans un tableau\n      const dataArray = result.data.data;\n      // Je parcours mon tableau et je viens changer les valeur par défaut de \"box_art_url\" par les dimensions que je veux \n      const finalArray = dataArray.map((game) => {\n        const newUrl = game.box_art_url\n          .replace('{width}', '250')\n          .replace('{height}', '300');\n          // Je remplace la valeur la valeur par la nouvelle\n        game.box_art_url = newUrl;\n        return game;\n      });\n      // Je stock dans mon state le retour de mon .map()\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"games-title\">Jeux les plus poluplaires</h1>\n      <div className=\"flex-home\">\n        {games.map((game) => (\n          //Pour chaque éléments du tableau je créer un components Game\n          <Game key={game.id} name={game.name} box={game.box_art_url} id={game.id} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ItemTopStreams({\n  thumbnail_url, user_name, gameName, viewer_count, login,\n}) {\n  return (\n    <div className=\"card-stream\">\n      <img src={thumbnail_url} alt=\"jeu\" className=\"card-stream-img\" />\n      <div className=\"card-stream-body\">\n        <h5 className=\"card-stream-title\">{user_name}</h5>\n        <p className=\"card-stream-text\">Jeu : {gameName}</p>\n        <p className=\"card-stream-viewer\">Viewers :{viewer_count}</p>\n        <Link to={{\n          pathname: `/live/${login}`,\n        }}\n        >\n          <div className=\"card-btn\">Regarder {user_name}</div>\n        </Link>\n\n      </div>\n    </div>\n  );\n}\n\nexport default ItemTopStreams;\n","import React, { useState, useEffect } from 'react';\nimport ItemTopStreams from './ItemTopStreams';\nimport api from '../../api';\nimport ItemSidebar from '../Header/Sidebar/ItemSidebar';\nimport './topstreams.scss';\n\nfunction TopStream() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      // Appel à l'API pour récupérer les top stream\n      const result = await api.get('https://api.twitch.tv/helix/streams');\n      const dataArray = result.data.data;\n      // Je viens map le tableau pour récupérer les id dont j'aurai besoin pour la suite\n      const gameIds = dataArray.map((stream) => stream.game_id);\n      const userIds = dataArray.map((stream) => stream.user_id);\n      // console.log(gameIds);\n      // console.log(userIds);\n      // Création des url personnalisés\n      const baseUrlGames = 'https://api.twitch.tv/helix/games?';\n      const baseUrlUSers = 'https://api.twitch.tv/helix/users?';\n\n      let queryParamsGame = '';\n      let queryParamsUsers = '';\n      // Je viens concaténer pour remplir mon url\n      gameIds.map((id) => (queryParamsGame += `id=${id}&`));\n\n      userIds.map((id) => (queryParamsUsers += `id=${id}&`));\n      // Je viens additionner mes 2 bout d'url\n      const urlFinalGames = baseUrlGames + queryParamsGame;\n      const urlFinalUsers = baseUrlUSers + queryParamsUsers;\n\n      // console.log(urlFinalGames);\n      // console.log(urlFinalUsers);\n\n      const gameNames = await api.get(urlFinalGames);\n      const getUsers = await api.get(urlFinalUsers);\n\n      const gameNamesArray = gameNames.data.data;\n      const UsersArray = getUsers.data.data;\n      // console.log(getNamesArray);\n      // console.log(getUsersArray);\n      // Création du tableua final\n      const finalArray = dataArray.map((stream) => {\n        stream.gameName = '';\n        stream.login = '';\n\n        gameNamesArray.forEach((name) => {\n          UsersArray.forEach((user) => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.truePic = user.profile_image_url;\n              stream.gameName = name.name;\n              stream.login = user.login;\n            }\n          });\n        });\n        // Ici je viens choisir la taille de mes images\n        const newUrl = stream.thumbnail_url\n          .replace('{width}', '320')\n          .replace('{height}', '180');\n        stream.thumbnail_url = newUrl;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <div className=\"games\">\n      <h1 className=\"games-title\">Stream les plus populaires</h1>\n      <div className=\"flex-home\">\n        {channels.map((channel) =>(\n          <ItemTopStreams key={channel.id} {...channel} />\n        ))}\n      </div>\n    </div>\n\n  );\n}\n\nexport default TopStream;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction GameStreams({thumbnail_url, user_name, viewer_count, login }) {\n  return (\n    <div className=\"card-game-streams\">\n      <img src={thumbnail_url} alt=\"jeu carte image\" className=\"card-game-streams-img\"/>\n      <div className=\"card-game-streams-body\">\n        <h5 className=\"card-game-streams-title\">{user_name}</h5>\n        <p className=\"card-game-streams-text\">Nombre de viewers : {viewer_count}</p>\n        <Link\n        className=\"link\"\n        to={{\n          pathname: `/live/${login}`\n        }}\n        >\n          <div className=\"card-game-streams-btn\">Regarder {user_name}</div>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default GameStreams;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport GameStream from './GameStreams';\nimport api from '../../api';\nimport './gamesStreams.scss';\n\nfunction GamesStreams() {\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState([]);\n  const location = useLocation();\n  const { slug } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(`https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`);\n      const dataArray = result.data.data;\n      let finalArray = dataArray.map((stream) => {\n        const newURL = stream.thumbnail_url\n          .replace('{width}', '320')\n          .replace('{height}', '180');\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      const totalViewers = finalArray.reduce((acc, val) => acc + val.viewer_count, 0);\n      const userIDs = dataArray.map((stream) => stream.user_id);\n      const baseUrl = 'https://api.twitch.tv/helix/users?';\n      let queryParamsUsers = '';\n      userIDs.map((id) => {\n        (queryParamsUsers += `id=${id}&`);\n      });\n      const finalUrl = baseUrl + queryParamsUsers;\n      const getUsersLogin = await api.get(finalUrl);\n      const userLoginArray = getUsersLogin.data.data;\n      finalArray = dataArray.map((stream) => {\n        stream.login = '';\n        userLoginArray.forEach((login) => {\n          if (stream.user_id === login.id) {\n            stream.login = login.login;\n          }\n        });\n        return stream;\n      });\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  console.log(viewers);\n  console.log(streamData);\n\n  return (\n    <div className=\"games-streams\">\n      <h1 className=\"games-streams-title\">Streams: {slug}</h1>\n      <h3 className=\"games-streams-subtitle\">\n        <strong className=\"games-streams-colored\">{viewers}</strong> personnes regardent {slug}\n      </h3>\n      <div className=\"flex-home\">\n        {streamData.map((stream, index) => (\n          <GameStream key={index} {...stream} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GamesStreams;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport api from '../../api';\nimport './Resultat.scss';\n\nfunction Resultats() {\n  const { slug } = useParams();\n\n  const [result, setResult] = useState(true);\n  const [streamerInfo, setStreamerInfo] = useState([]);\n\n  const cleanSearch = slug.replace(/ /g, '');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(`https://api.twitch.tv/helix/users?login=${cleanSearch}`);\n\n      if (result.data.data.length === 0) {\n        setResult(false);\n      }\n      else {\n        setStreamerInfo(result.data.data);\n      }\n    };\n    fetchData();\n  }, [cleanSearch]);\n\n  return (\n    <div>\n      <div className=\"resultat-container\">\n        <h4 className=\"resultat-container-title\">Résultat de recherche</h4>\n        {streamerInfo.map((stream, index) => (\n          <div key={index} className=\"resultat-container-card\">\n            <img src={stream.profile_image_url} alt=\"résultat profile\" className=\"resultat-container-card-img\" />\n            <div className=\"resultat-container-card-body\">\n              <h5 className=\"resultat-container-card-title\">{stream.display_name}</h5>\n              <div className=\"resultat-container-card-txt\">{stream.description}</div>\n              <Link\n                className=\"link\"\n                to={{\n                  pathname: `/live/${stream.login}`,\n                }}\n              >\n                <div className=\"resultat-container-card-btn\">Regarder {stream.display_name}</div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Resultats;\n","import React, { useState, useEffect } from 'react';\nimport ReactTwitchEmbebVideo from 'react-twitch-embed-video';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api';\nimport './live.scss';\n\nfunction Live() {\n  const [infoStream, setInfoStream] = useState([]);\n  const [infoGame, setInfoGame] = useState([]);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(`https://api.twitch.tv/helix/streams?user_login=${slug}`);\n      const gameID = result.data.data.map((gameID) => gameID.game_id);\n      const resultNameGame = await api.get(`https://api.twitch.tv/helix/games?id=${gameID}`);\n      const nameGame = resultNameGame.data.data.map((gameName) => gameName.name);\n      setInfoGame(nameGame);\n      setInfoStream(result.data.data[0]);\n    };\n    fetchData();\n  }, []);\n  console.log(slug);\n  return (\n    <div className=\"container-live\">\n      <ReactTwitchEmbebVideo height=\"754\" width=\"100%\" channel={slug} />\n      <div className=\"container-info\">\n        <div className=\"container-info-title\">{infoStream.title}</div>\n        <div className=\"container-info-viewer\">Viewers : {infoStream.viewer_count}</div>\n        <div className=\"container-info-game\">Streamer : {infoStream.user_name}, &nbsp; Langue : {infoStream.language}</div>\n        <div className=\"container-info-name\">Jeu : {infoGame}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Live;\n","// == Import npm\nimport React from 'react';\nimport Header from '../Header';\nimport Sidebar from '../Header/Sidebar';\nimport Games from '../Games';\nimport TopStreams from '../TopStreams';\nimport GamesStreams from '../GamesStreams';\nimport Resultats from '../Resultats';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Live from '../Live';\n\n// == Import\n// import './styles/index.scss';\n\n// == Composant\nconst App = () => (\n  <Router>\n    <div className=\"app\">\n      <Header />\n      <Sidebar />\n      <Switch>\n        <Route exact path=\"/\" component={Games} />\n        <Route path=\"/top-streams\" component={TopStreams} />\n        <Route path=\"/live/:slug\" component={Live} />\n        <Route path=\"/game/:slug\" component={GamesStreams} />\n        <Route path=\"/resultats/:slug\" component={Resultats} />\n      </Switch>\n    </div>\n  </Router>\n);\n\n// == Export\nexport default App;\n","// == Import : npm\nimport React from 'react';\nimport { render } from 'react-dom';\n\n// == Import : local\n// Composants\nimport App from './components/App';\nimport './styles/index.scss';\n\n// == Render\n// 1. Élément React racine (celui qui contient l'ensemble de l'app)\n//    => crée une structure d'objets imbriqués (DOM virtuel)\nconst rootReactElement = <App />;\n// 2. La cible du DOM (là où la structure doit prendre vie dans le DOM)\nconst target = document.getElementById('root');\n// 3. Déclenchement du rendu de React (virtuel) => DOM (page web)\nrender(rootReactElement, target);\n"],"sourceRoot":""}